version: '3.9'

services:

  flask:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: app
    image: flask
    restart: always
    environment:
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_HOSTNAME: ${MONGODB_HOSTNAME}
      URL_ENDPOINT:     ${URL_ENDPOINT}

    volumes:
      - appdata:/var/www
    depends_on:
      - mongodb
    ports:
      - "5000:5000"
    networks:
      - frontend
      - backend

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    command: mongod --auth
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGODB_DATA_DIR: ${MONGODB_DATA_DIR}
      MONDODB_LOG_DIR: ${MONDODB_LOG_DIR}
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      APP_PORT: ${APP_PORT}
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_HOSTNAME: ${MONGODB_HOSTNAME}

    volumes:
      - ./data/mongodbdata:/data/db:rw
    networks:
      - backend

  webserver:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: nginx
    container_name: webserver
    restart: always
    environment:
      APP_ENV: prod
      APP_NAME: webserver
      APP_DEBUG: "true"
      SERVICE_NAME: webserver
    ports:
      - "8080:80"
      - "6443:443"
    volumes:
      - nginxdata:/var/log/nginx
    depends_on:
      - flask
    networks:
      - frontend
      - backend

  openalpr:
    image: openalpr
    container_name: openalpr
    build:
      context: ./openalpr
      args:
        - RTSP_SOURCE
      target: 'final-stage'
      dockerfile: Dockerfile
    environment:
      RTSP_SOURCE: ${RTSP_SOURCE}
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_HOSTNAME: ${MONGODB_HOSTNAME}
    volumes:
      - E:\GitHub\Awesome-Compose\wmb\TRECIS\openalpr\config:/etc/openalpr
      - E:\GitHub\Awesome-Compose\wmb\TRECIS\data\openalpr:/var/lib/openalpr
      - .\openalpr:/home
    ports:
      - "11300:11300"
      - "8355:8355"
      - "554:554"
    restart: always
    depends_on:
      - mongodb
    networks:
      - backend
      - frontend
    cap_add:
      - SYS_NICE

  task:
    build:
      context: ./task
      dockerfile: Dockerfile
    container_name: task
    image: task:1
    restart: always
    environment:
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_HOSTNAME: ${MONGODB_HOSTNAME}
      URL_ENDPOINT:     ${URL_ENDPOINT}    

    volumes:      
      - E:\GitHub\Awesome-Compose\wmb\TRECIS\data\openalpr:/var/lib/openalpr:rw
    depends_on:
      - mongodb

    networks:    
      - backend      

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:  
  mongodbdata:
    driver: local
  appdata:
    driver: local
  nginxdata:
    driver: local